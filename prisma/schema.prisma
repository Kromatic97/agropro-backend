datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Persona {
  id          Int          @id @default(autoincrement())
  nombre      String
  funcionario Funcionario?
  proveedor   Proveedor?
  egresos     Egreso[]     @relation("PersonaEgresos") // ← relación nombrada
}

model Funcionario {
  id      Int     @id
  persona Persona @relation(fields: [id], references: [id])
}

model Proveedor {
  id      Int     @id
  persona Persona @relation(fields: [id], references: [id])
}

model Entidad {
  id           Int           @id @default(autoincrement())
  nombre       String
  egresos      Egreso[]
  lanzamientos Lanzamiento[]
}

model Moneda {
  id      Int      @id @default(autoincrement())
  nombre  String
  egresos Egreso[]
}

model Condicion {
  id      Int      @id @default(autoincrement())
  nombre  String
  egresos Egreso[]
}

model TipoEgreso {
  id      Int      @id @default(autoincrement())
  nombre  String
  egresos Egreso[]
}

model Egreso {
  id            Int        @id @default(autoincrement())
  tipoPersona   String     // 'Proveedor' o 'Funcionario'
  personaId     Int

  entidadId     Int
  monedaId      Int
  condicionId   Int
  tipoEgresoId  Int

  fecha         DateTime   @default(now())
  monto         Float
  descripcion   String

  persona       Persona    @relation("PersonaEgresos", fields: [personaId], references: [id])
  entidad       Entidad    @relation(fields: [entidadId], references: [id])
  moneda        Moneda     @relation(fields: [monedaId], references: [id])
  condicion     Condicion  @relation(fields: [condicionId], references: [id])
  tipoEgreso    TipoEgreso @relation(fields: [tipoEgresoId], references: [id])
  lanzamientos  Lanzamiento[]
  detallesEgreso DetalleEgreso[]
}


model Lanzamiento {
  id        Int     @id @default(autoincrement())
  egresoId  Int
  entidadId Int
  egreso    Egreso  @relation(fields: [egresoId], references: [id])
  entidad   Entidad @relation(fields: [entidadId], references: [id])
}


model Division {
  id             Int              @id @default(autoincrement())
  nombre         String
  detallesEgreso DetalleEgreso[]
}

model ObjetoGasto {
  id              Int             @id @default(autoincrement())
  detalleEgresoId Int
  tipo            String          // Ej: 'Zafra', 'Vehiculo', 'Campo'
  referenciaId    Int             // ID real del objeto (por ejemplo: zafraId, vehiculoId...)

  detalleEgreso   DetalleEgreso   @relation(fields: [detalleEgresoId], references: [id])
}


model Iva {
  id          Int             @id @default(autoincrement())
  descripcion String          // Ej: '10%', '5%', 'Exenta'
  porcentaje  Float           // Ej: 0.10, 0.05, 0.00
  detalles    DetalleEgreso[]
}


model DetalleEgreso {
  id              Int           @id @default(autoincrement())
  egresoId        Int
  divisionId      Int
  descripcion     String
  cantidad        Float
  precioUnitario  Float
  subtotal        Float
  ivaId           Int
  ivaMonto        Float
  total           Float

  egreso          Egreso        @relation(fields: [egresoId], references: [id])
  division        Division      @relation(fields: [divisionId], references: [id])
  iva             Iva           @relation(fields: [ivaId], references: [id])
  objetosGasto    ObjetoGasto[]
}


